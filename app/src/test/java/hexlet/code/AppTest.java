/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hexlet.code;

import io.javalin.Javalin;
import io.javalin.testtools.JavalinTest;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;

import static org.assertj.core.api.Assertions.assertThat;

class AppTest {

    private static Javalin app;
    private static final String NAME = "https://www.example.com";

    @BeforeEach
    public void beforeEach() throws SQLException, IOException {
        app = App.getApp();
    }

    @AfterAll
    public static void afterAll() {
        app.stop();
    }
    @Test
    void rootTest() {
        JavalinTest.test(app, (server, client) -> {
            var response = client.get("/");
            assertThat(response.code()).isEqualTo(200);
            assertThat(response.body().string()).contains("Анализатор страниц");
        });
    }

    @Test
    void addUrlsSuccessTest() {
        JavalinTest.test(app, (server, client) -> {
            var requestBody = "url=" + NAME;
            var response = client.post("/urls", requestBody);
            assertThat(response.code()).isEqualTo(200);
            assertThat(response.body().string()).contains(NAME);
        });
    }

    @Test
    void urlsTest() {
        JavalinTest.test(app, (server, client) -> {
            var response = client.get("/urls");
            assertThat(response.code()).isEqualTo(200);
            assertThat(response.body().string()).contains("Сайты");
        });
    }

    @Test
    void urlTest() {
        JavalinTest.test(app, (server, client) -> {
            URL url = new URL(NAME);
            String protocol = url.getProtocol();
            String host = url.getHost();
            String name = protocol + "://" + host;
            var requestBody = "url=" + name;
            client.post("/urls", requestBody);

            var response = client.get("/urls/1");
            assertThat(response.code()).isEqualTo(200);
            assertThat(response.body().string()).contains(NAME);
        });
    }
}
